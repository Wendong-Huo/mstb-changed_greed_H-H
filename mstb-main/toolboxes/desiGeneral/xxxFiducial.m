function xxxFiducial(src,~,fig)
%xxxFiducial - draw the window to perform fiducial marker alignment

% Determine if this function is supported, as we need the Image Processing
% toolbox...
tbCheck = which('imref2d');
if isempty(tbCheck)
    errordlg('The Image Processing toolbox cannot be found');
    set(src,'State','off');
    return
end

% Get the guidata
dpn = guidata(fig.fig);
if isempty(dpn)
    return
end

% Change the layout 
if strcmp(dpn.mode,'single')
    if strcmp(get(fig.tb.layout,'State'),'on')
        set(fig.tb.layout,'State','off');
        desiChangeLayout(fig.tb.layout,[],fig);
    end
else
    disp('Not compatible with desiPosNeg');
    return
end

% Draw the window for the annotation manipulation...
[man] = manipulateWindow(fig);
if isempty(man)
    return;
end

% How about increasing (temporarily) the resolution of the MS image? This
% might make the coreg a little easier to perform to get an optical image
% of the correct size
tmpImg = imresize(dpn.d1.img,10);
%figure; imagesc(tmpImg);
dpnIonImage([],[],fig.ax.ms1,tmpImg);

% What if there are already some fiducial markers from before?
if isfield(dpn.opt,'fiducial')
    if ~isempty(dpn.opt.fiducial)
        set(man.tab,'Data',dpn.opt.fiducial(:,1:2));
        
        % Then we need to scatter them, and save the handles so that they
        % can be deleted in the future
        axes(fig.ax.opt(1)); hold on;
        for n = 1:size(dpn.opt.fiducial,1)            
            dpn.opt.fiducial{n,5} = scatter(dpn.opt.fiducial{n,7},...
                dpn.opt.fiducial{n,8},...
                200,dpn.opt.fiducial{n,4},'o','filled',...
                'MarkerEdgeColor','k',...
                'Tag','fiducialMarker');
        end
        axes(fig.ax.ms1(1)); hold on;
        for n = 1:size(dpn.opt.fiducial,1)
            dpn.opt.fiducial{n,6} = scatter(dpn.opt.fiducial{n,9},...
                dpn.opt.fiducial{n,10},...
                200,dpn.opt.fiducial{n,4},'d','filled',...
                'MarkerEdgeColor','k',...
                'Tag','fiducialMarker');                        
        end
    end
end

% Update the table to reflect the new scatter plot handles
guidata(fig.fig,dpn);

% Set the callbacks for the annotation buttons
set(man.add,'Callback',{@xxxFiducialAdd,fig,man});
set(man.del,'Callback',{@xxxFiducialDelete,fig,man});
set(man.finish,'Callback',{@xxxFiducialPerform,fig,man});
set(man.reset,'Callback',{@xxxFiducialReset,fig,man});

return

% Update the table...
dpnUpdateAnnotationTable(dpn,man);

% Set the callbacks for the annotation buttons
set(man.pb,'Callback',{@dpnDrawAnnotation,fig,man});

% Set the callback for the ROI deletion function
set(man.del,'Callback',{@dpnDeleteAnnotation,fig,man});

% Set this as the user data, although I'm not sure where it gets picked up
set(src,'UserData',man);

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [man] = manipulateWindow(fig)
% Window with the little options for manipulating the figure...

% These are the colours that we are sticking with...
man.cols = [215 25 28; 253 174 97; 255 255 191; 166 217 106; 26 150 65;...
    166 97 26; 223 194 125; 245 245 245; 128 205 193; 1 133 113;...
    208 28 139; 241 182 218; 146 197 222; 5 113 176; 64 64 64] / 256;

parent = fig.pan2;

% Heading
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.95 1 0.05],...
    'Style','text',...
    'String','Manual Coregistration',...
    'FontSize',24,...
    'BackgroundColor',[1 1 1]);

% Empty table...
man.tab = uitable('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.65 0.9 0.25],...
    'ColumnName',{'?','Marker'},...
    'ColumnEditable',[true false],...
    'FontSize',16,...
    'ColumnWidth',{50 150});

% Delete button
man.del = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.575 0.26 0.05],...
    'Style','pushbutton',...
    'String','Delete Selected',...
    'FontSize',10,...
    'BackgroundColor',[0.9 0.5 0.5]);

% Reset button
man.reset = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.85 0.92 0.1 0.03],...
    'Style','pushbutton',...
    'String','Reset',...
    'FontSize',10,...
    'BackgroundColor',[0.9 0.5 0.5]);

% Add button
man.add = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.35 0.575 0.60 0.05],...
    'Style','pushbutton',...
    'String','Add New Point',...
    'FontSize',14,...
    'BackgroundColor',[0.5 0.9 0.5]);

% Select alignment method
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.5 0.26 0.05],...
    'Style','text',...
    'String','Method',...
    'FontSize',14,...
    'BackgroundColor','white');

man.method = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.35 0.5 0.60 0.05],...
    'Style','popupmenu',...
    'String',{'affine';'nonreflectivesimilarity';'projective';'similarity'},...
    'FontSize',12,...
    'Value',1);

% Checkbox for finalisation options - i.e. do it again without issues
man.finalise = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.070 0.90 0.05],...
    'Style','checkbox',...
    'String','Finalise transformation',...
    'FontSize',14,...
    'Value',0,...
    'BackgroundColor','white');

% Finish button
man.finish = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.01 0.9 0.05],...
    'Style','pushbutton',...
    'String','Coregister',...
    'FontSize',16,...
    'BackgroundColor',[0.5 0.9 0.5]);

return

% Button for continuous annotation
man.cont = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.675 0.9 0.05],...
    'Style','checkbox',...
    'String','Continuous annotation mode',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

man.fixed = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.1 0.9 0.025],...
    'Style','checkbox',...
    'String','Fixed rectangle',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

man.rect = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.07 0.9 0.025],...
    'Style','checkbox',...
    'String','Rectangle mode',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

message = ['To annotate a region, first click on a colour above. '...
    'Then make a single click to define one corner of a rectangle, '...
    'and then make another to define its opposite corner. '...
    char(10) 'A double '...
    'click will annotate a single pixel.' char(10) 'Continuous '...
    'annotation allows multiple regions to be drawn one after another.'...
    'To quit the continuous mode, double click here.'];
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.45 0.9 0.2],...
    'Style','text',...
    'String',message,...
    'FontSize',12,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left');

% Draw the colour buttons...
w = 1/5;
t = 0.2/3;
maxR = 5;
maxC = 3;
man.pb = zeros(maxR*maxC,1);
i = 0;
for n = 1:maxC
    
    % Up position
    u = (0.2*(maxC - n + 1)/maxC) + 0.675;
    
    for r = 1:maxR
        
        % Left position...
        l = (r-1)/maxR;        
        i = i + 1;
        
        % Draw the button
        man.pb(i,1) = uicontrol('Parent',parent,...
            'Units','normalized',...
            'Position',[l u w t],...
            'Style','pushbutton',...
            'BackgroundColor',cols(i,:),...
            'UserData',i);        
    end    
end
    
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


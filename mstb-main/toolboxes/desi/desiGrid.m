function desiGrid(src,~,fig)
%desiGrid - display the grid on the optical image, or turn it off depending
%on the state of the button

% Guidata and immediate return...
dpn = guidata(fig.fig);
if isempty(dpn)
    set(src,'State','off');
    return
end

% Get the state of the button
state = get(src,'State');

% Then once we have the grid, then we need to draw it (or remove it from
% view)
switch state
    case 'on'
                
        % Check that we have a grid calculated, and if not then go away and
        % calculate it
        if ~isfield(dpn.fig,'grid')
            desiDetermineGrid([],[],fig);
            dpn = guidata(fig.fig);
        else
            if isempty(dpn.fig.grid)
                desiDetermineGrid([],[],fig);
                dpn = guidata(fig.fig);
            end
        end
        
        % Check that we still have a grid
        if ~isfield(dpn.fig,'grid')
            set(src,'State','off');
            return
        end

        % Set the gridlines for the optical image
        set(dpn.fig.ax.opt(1),...
            'XTick',dpn.fig.grid.opx,...
            'YTick',dpn.fig.grid.opy,...
            'XTickLabel',[],...
            'YTickLabel',[],...
            'LineWidth',1);        
        grid(dpn.fig.ax.opt(1),'on');
        
        % Add also on the MS image
        set(dpn.fig.ax.ms1(1),...
            'XTick',dpn.fig.grid.msx,...
            'YTick',dpn.fig.grid.msy,...
            'XTickLabel',[],...
            'YTickLabel',[],...
            'LineWidth',1);
        grid(dpn.fig.ax.ms1(1),'on');
        
        % Also potentially add to the other MS axes
        if strcmp(dpn.mode,'dual')
            set(dpn.fig.ax.ms2(1),...
                'XTick',dpn.fig.grid.msx,...
                'YTick',dpn.fig.grid.msy,...
                'XTickLabel',[],...
                'YTickLabel',[],...
                'LineWidth',1);
            grid(dpn.fig.ax.ms2(1),'on');
            
            set(dpn.fig.ax.fu(1),...
                'XTick',dpn.fig.grid.msx,...
                'YTick',dpn.fig.grid.msy,...
                'XTickLabel',[],...
                'YTickLabel',[],...
                'LineWidth',1);
            grid(dpn.fig.ax.fu(1),'on');

        end

        
    case 'off'
        
        % Remove from the optical image
        set(dpn.fig.ax.opt(1),...
            'XTick',[],...
            'YTick',[],...
            'XTickLabel',[],...
            'YTickLabel',[],...
            'LineWidth',5,...
            'TickLength',[0 0]);
        grid(dpn.fig.ax.opt(1),'off');
        
        % Remove from the MS image
        set(dpn.fig.ax.ms1(1),...
            'XTick',[],...
            'YTick',[],...
            'XTickLabel',[],...
            'YTickLabel',[],...
            'LineWidth',5,...
            'TickLength',[0 0]);
        grid(dpn.fig.ax.ms1(1),'off');
        
        % Also potentially remove from the other MS axes
        if strcmp(dpn.mode,'dual')
            set(dpn.fig.ax.ms2(1),...
                'XTick',[],...
                'YTick',[],...
                'XTickLabel',[],...
                'YTickLabel',[],...
                'LineWidth',5,...
                'TickLength',[0 0]);
            grid(dpn.fig.ax.ms2(1),'off');
        
            set(dpn.fig.ax.fu(1),...
                'XTick',[],...
                'YTick',[],...
                'XTickLabel',[],...
                'YTickLabel',[],...
                'LineWidth',5,...
                'TickLength',[0 0]);
            grid(dpn.fig.ax.fu(1),'off');

        end


end


end


function dpnAnnotate(src,~,fig)
%UNTITLED22 Summary of this function goes here
%   Detailed explanation goes here

% Get the guidata
dpn = guidata(fig.fig);
if isempty(dpn)
    return
end

% Check for coregistration having been performed...  There is no point
% continuing if coregistration has not been performed, even if it is below
% par
flag = false;
if isfield(dpn,'opt')
    if isfield(dpn.opt,'coreg')
        flag = true;
    end
end
if ~flag
    set(src,'State','off');
    return;
end

% Change the layout 
if strcmp(dpn.mode,'single')
    if strcmp(get(fig.tb.layout,'State'),'on')
        set(fig.tb.layout,'State','off');
        desiChangeLayout(fig.tb.layout,[],fig);
    end
end

% Draw the window for the annotation manipulation...
[man] = manipulateWindow(fig);
if isempty(man)
    return;
end

% Update the table...
dpnUpdateAnnotationTable(dpn,man);

% Set the callbacks for the annotation buttons
set(man.pb,'Callback',{@dpnDrawAnnotation,fig,man});

% Set the callback for the ROI deletion function
set(man.del,'Callback',{@dpnDeleteAnnotation,fig,man});

% Set this as the user data, although I'm not sure where it gets picked up
set(src,'UserData',man);

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [man] = manipulateWindow(fig)
% Window with the little options for manipulating the figure...

% These are the colours that we are sticking with...
cols = [215 25 28; 253 174 97; 255 255 191; 166 217 106; 26 150 65;...
    166 97 26; 223 194 125; 245 245 245; 128 205 193; 1 133 113;...
    208 28 139; 241 182 218; 146 197 222; 5 113 176; 64 64 64] / 256;

parent = fig.pan2;

% Heading
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.95 1 0.05],...
    'Style','text',...
    'String','Annotations',...
    'FontSize',24,...
    'BackgroundColor',[1 1 1]);


% Empty table...
man.tab = uitable('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.15 0.9 0.3],...
    'ColumnName',{'Colour','ID'},...
    'ColumnEditable',[false true],...
    'FontSize',16,...
    'ColumnWidth',{100 100});

% Delete button
man.del = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.01 0.9 0.05],...
    'Style','pushbutton',...
    'String','Delete',...
    'BackgroundColor',[0.9 0.5 0.5]);

% Finish button
% man.finish = uicontrol('Parent',parent,...
%     'Units','normalized',...
%     'Position',[0.05 0.01 0.9 0.05],...
%     'Style','pushbutton',...
%     'String','Finish',...
%     'BackgroundColor',[0.5 0.9 0.5]);

% Button for continuous annotation
man.cont = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.675 0.9 0.05],...
    'Style','checkbox',...
    'String','Continuous annotation mode',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

man.fixed = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.1 0.9 0.025],...
    'Style','checkbox',...
    'String','Fixed rectangle',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

man.rect = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.07 0.9 0.025],...
    'Style','checkbox',...
    'String','Rectangle mode',...
    'FontSize',16,...
    'Value',0,...
    'BackgroundColor',[1 1 1]);

message = ['To annotate a region, first click on a colour above. '...
    'Then make a single click to define one corner of a rectangle, '...
    'and then make another to define its opposite corner. '...
    char(10) 'A double '...
    'click will annotate a single pixel.' char(10) 'Continuous '...
    'annotation allows multiple regions to be drawn one after another.'...
    'To quit the continuous mode, double click here.'];
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.45 0.9 0.2],...
    'Style','text',...
    'String',message,...
    'FontSize',12,...
    'BackgroundColor',[1 1 1],...
    'HorizontalAlignment','left');

% Draw the colour buttons...
w = 1/5;
t = 0.2/3;
maxR = 5;
maxC = 3;
man.pb = zeros(maxR*maxC,1);
i = 0;
for n = 1:maxC
    
    % Up position
    u = (0.2*(maxC - n + 1)/maxC) + 0.675;
    
    for r = 1:maxR
        
        % Left position...
        l = (r-1)/maxR;        
        i = i + 1;
        
        % Draw the button
        man.pb(i,1) = uicontrol('Parent',parent,...
            'Units','normalized',...
            'Position',[l u w t],...
            'Style','pushbutton',...
            'BackgroundColor',cols(i,:),...
            'UserData',i);        
    end    
end
    
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


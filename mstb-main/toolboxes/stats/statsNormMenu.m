function statsNormMenu(~,~,fig)
%desiStatistics - draw a stats window in the regulation space for plotting
%a few things...

% Get the guidata
sts = guidata(fig.fig);
if isempty(sts)
    return
end

% Current opts?
if isfield(sts.proc,'opts')
    opts = sts.proc.opts;
else
    opts.mzRange = [floor(min(sts.raw.var.mz)) ceil(max(sts.raw.var.mz))];
    if isfield(sts.raw.var,'rt')
        opts.rtRange = [floor(min(sts.raw.var.rt)) ceil(max(sts.raw.var.rt))];
    else
        opts.rtRange = [];
    end
    opts.normMethod = 'TIC';
    opts.doLog = true;
    opts.scale = 'None';
end

% Define the range - this needs to be changed when we have data

% Draw the window for the annotation manipulation...
[window] = manipulateWindow(fig,opts,sts);
if isempty(window)
    return;
end

% Set the callback for the finish button / window close
set(window.finish,'Callback',{@statsNormPerform,fig,window});

% Other callbacks
set(window.groups,'Callback',{@updateUnique,fig,window});
set(window.unique,'Callback',{@filterUnique,fig,window});

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [man] = manipulateWindow(fig,opts,sts)
% Window with the little options for manipulating the figure...

% This is where we draw everything
parent = fig.pan2;

fS = 14;

% Heading
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.95 1 0.05],...
    'Style','text',...
    'String','Norm / Tran / Scal',...
    'FontSize',24,...
    'BackgroundColor',[1 1 1]);

%%%%

% Normalisation
str = {'None','TIC','PQN-Mean','PQN-Median','Internal Standard',...
    'PQN-Year','PQN-Global'};
if ~strcmp(getUser,'jmckenzi')
    str = str(1:end-2);
end
val = find(strcmp(str,opts.normMethod));
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.85 0.5 0.1],...
    'Style','text',...
    'String','Normalisation',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.norm = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 0.85 0.5 0.1],...
    'Style','popupmenu',...
    'String',str,...
    'Value',val,...
    'FontSize',fS);

% Transformation
if opts.doLog
    val = 2;
else
    val = 1;
end
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.8 0.5 0.1],...
    'Style','text',...
    'String','Transformation',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.log = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 0.8 0.5 0.1],...
    'Style','popupmenu',...
    'String',{'None','Yes'},...
    'Value',val,...
    'FontSize',fS);

% Scaling
if strcmp(opts.scale,'None')
    val = 1;
else
    val = 2;
end
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.75 0.5 0.1],...
    'Style','text',...
    'String','Scaling',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.scale = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 0.75 0.5 0.1],...
    'Style','popupmenu',...
    'String',{'None','UV'},...
    'Value',val,...
    'FontSize',fS);

% m/z range...
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.8-0.065-0.05 0.5 0.1],...
    'Style','text',...
    'String','m/z Range',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.mzL = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 0.8-0.05 0.23 0.04],...
    'Style','edit',...
    'String',num2str(opts.mzRange(1)),...
    'FontSize',fS);
man.mzH = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.74 0.8-0.05 0.23 0.04],...
    'Style','edit',...
    'String',num2str(opts.mzRange(2)),...
    'FontSize',fS);

% RT range...
if ~isempty(opts.rtRange)
    uicontrol('Parent',parent,...
        'Units','normalized',...
        'Position',[0 0.75-0.065-0.05 0.5 0.1],...
        'Style','text',...
        'String','RT Range',...
        'FontSize',fS,...
        'BackgroundColor',[1 1 1]);
    man.rtL = uicontrol('Parent',parent,...
        'Units','normalized',...
        'Position',[0.5 0.75-0.05 0.23 0.04],...
        'Style','edit',...
        'String',num2str(opts.rtRange(1)),...
        'FontSize',fS);
    man.rtH = uicontrol('Parent',parent,...
        'Units','normalized',...
        'Position',[0.74 0.75-0.05 0.23 0.04],...
        'Style','edit',...
        'String',num2str(opts.rtRange(2)),...
        'FontSize',fS);
end

% Finish button
man.finish = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.05 0.01 0.9 0.05],...
    'Style','pushbutton',...
    'String','Process',...
    'BackgroundColor',[0.5 0.9 0.5],...
    'FontSize',fS + 4);


% Subeading
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.65 1 0.05],...
    'Style','text',...
    'String','Select observations',...
    'FontSize',20,...
    'BackgroundColor',[1 1 1]);


% Need to make a window for the meta groups to be listed here...
x = 0.6;
names = fieldnames(sts.raw.meta);
idx = strcmp(names,'hist') | strcmp(names,'histID');
if sum(idx) == 1
    idx = find(idx);
else
    idx = 1;
end
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 x 0.5 0.05],...
    'Style','text',...
    'String','Groups',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.groups = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 x-0.15 0.475 0.2],...
    'Style','listbox',...
    'String',names,...
    'Value',idx,...
    'FontSize',fS,...
    'Min',1,...
    'Max',1);


% Need to make a window for the meta groups to be listed here...
x = 0.4;
unq = unique(sts.raw.meta.(names{idx}));
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 x 0.5 0.05],...
    'Style','text',...
    'String','Values',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.unique = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 x-0.15 0.475 0.2],...
    'Style','listbox',...
    'String',unq,...
    'Value',1:numel(unq),...
    'FontSize',fS,...
    'Min',1,...
    'Max',10);

% Something to display the total number of spectra which we are analysing
numO = size(sts.raw.sp,1);
x = 0.15;
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 x 0.5 0.05],...
    'Style','text',...
    'String','Observations (total)',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.counter = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 x 0.475 0.05],...
    'Style','text',...
    'String',[int2str(numO) ' (' int2str(numO) ')'],...
    'FontSize',fS,...
    'BackgroundColor','white');

% Variable trimming...
if strcmp(getUser,'jmckenzi')
    en = 'on';
else
    en = 'off';
end
str = {'All','Developmental','Very frequent'};
uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0 0.1 0.5 0.025],...
    'Style','text',...
    'String','Variable selection',...
    'FontSize',fS,...
    'BackgroundColor',[1 1 1]);
man.varSelect = uicontrol('Parent',parent,...
    'Units','normalized',...
    'Position',[0.5 0.1 0.5 0.025],...
    'Style','popupmenu',...
    'String',str,...
    'Value',1,...
    'FontSize',fS,...
    'Enable',en);

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function updateUnique(~,~,fig,man)
% Update new entries for each meta group

% Determine the name of the selected group...
val = man.groups.Value;
names = man.groups.String;
name = names{val};

% Determine unique groups
sts = guidata(fig.fig);
unq = unique(sts.raw.meta.(name));

% Update...
man.unique.Value = 1:numel(unq);
man.unique.String = unq;

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function filterUnique(~,~,fig,man)
% Select the observations in the table that match the selected ones

vals = man.unique.Value;
strs = man.unique.String;

% Determine the group from the other box
grp = man.groups.String(man.groups.Value);

% Get the meta data
sts = guidata(fig.fig);
list = sts.raw.meta.(grp{1});

% Now we need to match values in list to those selected by the strs/vals
% combination
match = repmat({false},size(list));
if iscell(list)
    for n = 1:numel(vals)    
        tmp = strcmp(list,strs{vals(n)});    
        match(tmp) = {true};
    end
elseif isnumeric(list)
    strs = str2num(strs);
    for n = 1:numel(vals)
        tmp = list == strs(vals(n));
        match(tmp) = {true};
    end
else
    error('Match error');
end
    
match2 = cell2mat(match);
numO = sum(match2);
man.counter.String = [int2str(numO) ' (' int2str(size(match2,1)) ')'];

% Now set these to be true in the table...
td = fig.ax.table.Data;
td(:,1) = match;
fig.ax.table.Data = td;

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

